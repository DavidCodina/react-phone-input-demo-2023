import{r as l,j as e,a as n,I as f,u as g,T as y,H as w,W as v}from"./index-25c2db91.js";const x=()=>{const[d,p]=l.useState("+12065554433"),[h,u]=l.useState(!1),[s,m]=l.useState(""),c=t=>(t=typeof t=="string"?t:d,typeof t=="string"&&t.trim()===""?(m("A valid phone number is required."),"A valid phone number is required."):(m(""),"")),b=()=>{const t=[];if([u].forEach(o=>{o(!0)}),[c].forEach(o=>{const a=o();a&&t.push(a)}),t.length>=1){console.log("Returning early from handleSubmit() because of errors.",t);return}console.log("No errors!")};return e(l.Fragment,{children:n("div",{style:{backgroundColor:"#fafafa",border:"1px solid #333",borderRadius:15,margin:"0 auto 25px auto",maxWidth:800,padding:15},children:[e(f,{defaultCountry:"US",feedback:s||"Looks Good!",formGroupClassName:"",formGroupStyle:{marginBottom:15},id:"international-version",inputClassName:"form-control form-control-sm",inputStyle:{},international:!0,isInvalid:!!s,isValid:!s,label:"Phone Number:",labelClassName:"text-sm font-bold text-blue-500",labelRequired:!0,labelStyle:{},name:"international-version",onBlur:(t,r,i,o,a)=>{console.log({value:t,countryCallingCode:r,countryCode:i,isCorrectLength:o,target:a.target}),u(!0),c(t)},onChange:(t,r,i,o)=>{console.log({value:t,countryCallingCode:r,countryCode:i,isCorrectLength:o}),p(t),h&&c(t)},placeholder:"Phone Number...",touched:h,value:d}),e("button",{className:"block w-full bg-green-500 font-bold text-white text-sm rounded hover:bg-green-600",onClick:b,style:{minHeight:31},children:"Submit"})]})})},S=()=>{const[d,p]=l.useState("+12065554433"),[h,u]=l.useState(!1),[s,m]=l.useState(""),c=t=>(t=typeof t=="string"?t:d,typeof t=="string"&&t.trim()===""?(m("A valid phone number is required."),"A valid phone number is required."):(m(""),"")),b=()=>{const t=[];if([u].forEach(o=>{o(!0)}),[c].forEach(o=>{const a=o();a&&t.push(a)}),t.length>=1){console.log("Returning early from handleSubmit() because of errors.",t);return}console.log("No errors!")};return e(l.Fragment,{children:n("div",{style:{backgroundColor:"#fafafa",border:"1px solid #333",borderRadius:15,margin:"0 auto 25px auto",maxWidth:800,padding:15},children:[e(f,{defaultCountry:"US",feedback:s||"Looks Good!",formGroupClassName:"",formGroupStyle:{marginBottom:15},id:"national-version",inputClassName:"form-control form-control-sm",inputStyle:{},isInvalid:!!s,isValid:!s,label:"Phone Number:",labelClassName:"text-sm font-bold text-blue-500",labelRequired:!0,labelStyle:{},name:"national-version",onBlur:(t,r,i,o,a)=>{console.log({value:t,countryCallingCode:r,countryCode:i,isCorrectLength:o,target:a.target}),u(!0),c(t)},onChange:(t,r,i,o)=>{console.log({value:t,countryCallingCode:r,countryCode:i,isCorrectLength:o}),p(t),h&&c(t)},placeholder:"Phone Number...",touched:h,value:d}),e("button",{className:"block w-full bg-green-500 font-bold text-white text-sm rounded hover:bg-green-600",onClick:b,style:{minHeight:31},children:"Submit"})]})})},k=()=>(g("Demo"),n("div",{className:"2xl:container flex-1 mx-auto w-full p-6",children:[e(y,{style:{marginBottom:50,textAlign:"center"},children:"Demo"}),e(w,{style:{marginBottom:50}}),e(S,{}),e(x,{}),n("section",{className:"bg-white mx-auto p-4 border border-gray-100 rounded-xl text-sm",style:{maxWidth:800},children:[n("p",{children:[e("span",{className:"font-bold",children:"Gotcha:"})," Suppose that"," ",e("code",{children:"react-phone-number-input"})," is ",e("code",{children:"!international"}),", and the country code is set to ",e("code",{children:"'US'"}),". In that case, if the initial value (i.e., value on mount) lacks ",e("code",{children:"'+1'"})," at first, then ",e("code",{children:"react-phone-number-input"})," won't render the value. This is the default behavior of the library."]}),n("p",{children:["This might occur in cases where the database previously stored the phone number in a different format, and we're now using",e("code",{children:"react-phone-number-input"})," on the client. However, if we're trying to render the initial value in an edit form,"," ",e("em",{children:"it will not output"}),"."]}),n("p",{className:"mx-10",children:[n("span",{className:"font-bold",children:["Solution 1: ",e("code",{children:"enableFallbackInput"}),":"]})," ","The above component is called ",e("code",{children:"InputPhone"}),", and is an abstraction of ",e("code",{children:"react-phone-number-input"}),". By setting"," ",e("code",{children:"enableFallbackInput"})," to ",e("code",{children:"true"})," it allows"," ",e("code",{children:"InputPhone"})," to fallback to a standard"," ",e("code",{children:"<input type='tel' />"}),"."]}),n("p",{className:"mx-10",children:[n("span",{className:"font-bold",children:["Solution 2 ",e("code",{children:"formatRawValue"}),":"]})," ","By setting ",e("code",{children:"formatRawValue"})," to ",e("code",{children:"true"}),","," ",e("code",{children:"InputPhone"})," will observe the raw value, and add"," ",e("code",{children:"'+'"})," or ",e("code",{children:"'+1'"})," to it if it is lacking (when"," ",e("code",{children:"'US'"}),"/",e("code",{children:"!international"}),"). The ",e("code",{children:"'+1'"})," ","is never observable in the formatted UI, but will exist on the raw state value. ",e("strong",{children:"Note:"})," ",e("code",{children:"enableFallbackInput"})," ","has precedence over ",e("code",{children:"formatRawValue"}),". Thus, if both are set to ",e("code",{children:"true"}),", only ",e("code",{children:"enableFallbackInput"})," will be implemented."]}),e("p",{className:"text-center",children:"---"}),n("p",{children:["By default, with the international version the number will still appear in the UI (even if missing ",e("code",{children:"'+'"})," and country), but it won't be formatted. Unfortunately, with international numbers there's just no way to know in advance what the country code is."]}),n("p",{children:["That said, ",e("code",{children:"react-phone-number-input"})," does attempt to infer the country code and formatting. Presumably, this is based both on the initial number (i.e., presumed country code) and the total length of the number."]}),n("p",{children:["If ",e("code",{children:"defaultCountry"})," is provided to the international version, it will only default to that country If the initial value is a partial or full match. For example, if we set"," ",e("code",{children:"defaultCountry"})," to",e("code",{children:"'US'"}),", the initial value can be ",e("code",{children:"''"}),","," ",e("code",{children:"'+'"}),", ",e("code",{children:"'+1'"}),", ",e("code",{children:"'+12'"}),", etc. Conversely, ",e("code",{children:"'206'"}),", ",e("code",{children:"'5'"}),", etc. won't work, and will instead just show the international option."]}),n("p",{children:["Ultimately, it seems preferable to opt for something simpler. For example, a basic ",e("code",{children:"<input type='tel />"})," that allows the user to enter whatever they want. Libraries like"," ",e("code",{children:"react-phone-number-input"})," just seem like they have the potential to incorrectly alter the user's number. The other solution is to ",e("em",{children:"always"})," use the international version."]})]}),e(v,{})]}));export{k as default};
